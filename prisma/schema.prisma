// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // 
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }


enum Roles {
  STUDENT
  EMBASSADOR
  RETHINKER
}

enum Levels {
  LOW
  MEDIUM
  HIGH
}

enum Types {
  COURSE
  WORKSHOP
  TRAINING
  LECTURE
}

model User {
  id      String   @id @default(uuid())
  email   String   @unique
  name    String?
  surname String?
  main String?
  watched String[]
  // emblem String[]
  role    Roles @default(STUDENT)
  profile Profile?
  course Course[]

  @@map("user")
}

model Profile {
  id     String  @id @default(uuid())
  bio    String?
  avatar String?
  social Json?
  user   User    @relation(fields: [userId], references: [id])
  userId String  @unique

  @@map("profile")
}

model Trail {
  id      String   @id @default(uuid())
  name    String   @unique
  description String
  weight Int
  course Course[]
  
  @@map("trail")
}


model Course {
  id String @id @default(uuid())
  name String
  description String
  level Levels
  workload Int
  learning String
  skills String
  trail   Trail    @relation(fields: [trailId], references: [id], onDelete: Cascade)
  trailId String
  teacher User @relation(fields: [teacherId], references: [id],  onDelete: Cascade)
  teacherId String
  modules Module[]
  type Types?
  

  @@map("course")
}

model Lesson {
  id String @id
  name String
  embedUrl String
  order Int
  description String
  module     Module  @relation(fields: [moduleId], references: [id], onDelete: Cascade)  
  moduleId String

  @@map("lesson")
}

model Module {
  id          String    @id @default(uuid())
  name        String
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    String  
  lessons     Lesson[]

  @@map("module")
}

// model Whatched {
//   id String @id
//   user User @relation(fields: [userId], references: [id])
//   userId String @unique

//   @@map("whatched")

// }

// model Teacher {
//   id String @id
//   name String
//   office String
//   avatar String
//   course Course[]

//   @@map("teacher")
// }